LIBNAME NH 'C:\輔仁大學臨時工\永和耕莘';RUN;
LIBNAME TEMP 'C:\輔仁大學臨時工\永和耕莘\TEMP';RUN;

LIBNAME NHIRD 'D:\NHIRD'; RUN;
DATA ICD_C01; /*中耳炎*/
	INPUT ICD $;
	CARDS; 
381
382
; 
RUN;
DATA ICD_C02; /*偏頭痛*/
	INPUT ICD $;
	CARDS; 
346
; 
RUN;
DATA ICD_C03; /*妥瑞症*/
	INPUT ICD $;
	CARDS; 
3072
; 
RUN;
DATA ICD_C04; /*注意力缺陷過動症*/
	INPUT ICD $;
	CARDS; 
314
; 
RUN;
DATA ICD_C05; /*本身神經學疾病干擾*/
	INPUT ICD $;
	CARDS; 
315
V40
345
343
299
318
; 
RUN;

DATA ICD_C06; /*後天中樞神經感染疾病影響腦部*/
	INPUT ICD $;
	CARDS; 
323
322
348
768
; 
RUN;



DATA ICD_C07; /*Asthma*/
	INPUT ICD $;
	CARDS; 
493
; 
RUN;
DATA ICD_C08; /*Allergic rhinitis*/
	INPUT ICD $;
	CARDS; 
477
; 
RUN;
DATA ICD_C09; /*Atopic dermatitis*/
	INPUT ICD $;
	CARDS; 
6918
; 
RUN;
DATA ICD_C10; /*Sleep disorder*/
	INPUT ICD $;
	CARDS; 
7805
3074
; 
RUN;
DATA ICD_C11; /*depression*/
	INPUT ICD $;
	CARDS; 
2962
2963
3004
; 
RUN;
DATA ICD_C12; /*anxiety*/
	INPUT ICD $;
	CARDS; 
300
; 
RUN;
DATA ICD_C13; /*conduct disorder*/
	INPUT ICD $;
	CARDS; 
312
31381
; 
RUN;

%LET SS=2000;
%LET EE=2013; 
DATA _NULL_; /*取出C01~C20DATA*/
    DO ICD="C01","C02","C03","C04","C05","C06","C07","C08","C09","C10","C11","C12","C13";
    CALL EXECUTE("PROC SQL;");
    DO YEAR=&SS TO &EE;
        CALL EXECUTE("CREATE TABLE CD_"||ICD||STRIP(YEAR)||" AS
            SELECT DISTINCT 
			A.ID,
			A.ID_BIRTHDAY,
			'CD' AS TYPE,  
			A.CASE_TYPE,
			A.FUNC_DATE,
			ACODE_ICD9_1 AS ICD9_1,
			ACODE_ICD9_2 AS ICD9_2,
			ACODE_ICD9_3 AS ICD9_3
            FROM NHIRD.CD"||STRIP(YEAR)||" AS A
            WHERE
                SUBSTR(ACODE_ICD9_1,1,3) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ACODE_ICD9_2,1,3) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ACODE_ICD9_3,1,3) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ACODE_ICD9_1,1,4) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ACODE_ICD9_2,1,4) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ACODE_ICD9_3,1,4) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ACODE_ICD9_1,1,5) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ACODE_ICD9_2,1,5) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ACODE_ICD9_3,1,5) IN (SELECT ICD FROM ICD_"||ICD||")
                ;");
        CALL EXECUTE("CREATE TABLE DD_"||ICD||STRIP(YEAR)||" AS
            SELECT 
			A.ID,
			A.ID_BIRTHDAY,
			'DD' AS TYPE,
			A.CASE_TYPE,
			A.IN_DATE AS FUNC_DATE,
			ICD9CM_CODE AS ICD9_1,
			ICD9CM_CODE_1 AS ICD9_2,
			ICD9CM_CODE_2 AS ICD9_3,
			ICD9CM_CODE_3 AS ICD9_4,
			ICD9CM_CODE_4 AS ICD9_5
            FROM NHIRD.DD"||STRIP(YEAR)||" AS A
            WHERE
                SUBSTR(ICD9CM_CODE,1,3) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_1,1,3) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_2,1,3) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_3,1,3) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_4,1,3) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE,1,4) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_1,1,4) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_2,1,4) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_3,1,4) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_4,1,4) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE,1,5) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_1,1,5) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_2,1,5) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_3,1,5) IN (SELECT ICD FROM ICD_"||ICD||") OR
                SUBSTR(ICD9CM_CODE_4,1,5) IN (SELECT ICD FROM ICD_"||ICD||")
                ;");
    END;
    CALL EXECUTE("QUIT;");
    END;
RUN;

DATA _NULL_; /*合併檔案*/
    DO ICD="C01","C02","C03","C04","C05","C06","C07","C08","C09","C10","C11","C12","C13";
    CALL EXECUTE("DATA NH."||ICD||";");
    CALL EXECUTE("SET CD_"||ICD||"2000-CD_"||ICD||"2013 DD_"||ICD||"2000-DD_"||ICD||"2013;");
    CALL EXECUTE("RUN;");
    END;
RUN;
DATA _NULL_; /*取出曾經紀錄死亡的人的DATA*/
    DO ICD="DEA";
    CALL EXECUTE("PROC SQL;");
    DO YEAR=&SS TO &EE;
        CALL EXECUTE("CREATE TABLE DD_"||ICD||STRIP(YEAR)||" AS
            SELECT 
			A.ID,
			A.ID_BIRTHDAY,
			'DD' AS TYPE, 
			A.CASE_TYPE,
			A.IN_DATE AS FUNC_DATE,
			TRAN_CODE,
			ICD9CM_CODE AS ICD9_1,
			ICD9CM_CODE_1 AS ICD9_2,
			ICD9CM_CODE_2 AS ICD9_3,
			ICD9CM_CODE_3 AS ICD9_4,
			ICD9CM_CODE_4 AS ICD9_5,
			ICD_OP_CODE,
			ICD_OP_CODE_1,
			ICD_OP_CODE_2,
			ICD_OP_CODE_3,
			ICD_OP_CODE_4
            FROM NHIRD.DD"||STRIP(YEAR)||" AS A
            WHERE TRAN_CODE IN ('4','A')
                ;");
    END;
    CALL EXECUTE("QUIT;");
    END;
RUN;

DATA _NULL_; /*合併檔案*/
    DO ICD="DEA";
    CALL EXECUTE("DATA NH."||ICD||";");
    CALL EXECUTE("SET DD_"||ICD||"2000-DD_"||ICD||"2013;");
    CALL EXECUTE("RUN;");
    END;
RUN;
DATA TEMP.TEST_C01;/*CASE02計算用*/
SET NH.C01;
RUN;

PROC SQL; /*ID進行串檔*/
CREATE TABLE NH.CASE_00 AS 
SELECT DISTINCT 
	A.ID,
	MIN(FUNC_DATE) AS FIRST_DATE,
	B.ID_SEX,
	CATS(B.ID_BIRTHDAY,'15') AS ID_BIRTHDAY,
	FLOOR(YRDIF(INPUT(CATS(SUBSTR(B.ID_BIRTHDAY,1,4),'0101'),YYMMDD8.),INPUT(MIN(FUNC_DATE),YYMMDD8.),'ACT/ACT')) AS AGE
FROM NH.C01 AS A
LEFT JOIN NHIRD.ID2005 AS B ON A.ID = B.ID
GROUP BY A.ID
;
QUIT;
proc freq data =  NH.CASE_00;
	table age;
	run;
PROC SQL;  /*EXL03 偏頭痛*/
CREATE TABLE TEMP.EXL03 AS 
SELECT DISTINCT A.ID
FROM NH.CASE_00 AS A
INNER JOIN NH.C02 AS B ON A.ID = B.ID AND A.FIRST_DATE >= B.FUNC_DATE
;
PROC SQL;  /*EXL04 妥瑞症*/
CREATE TABLE TEMP.EXL04 AS 
SELECT DISTINCT A.ID
FROM NH.CASE_00 AS A
INNER JOIN NH.C03 AS B ON A.ID = B.ID AND A.FIRST_DATE >= B.FUNC_DATE
;
PROC SQL;  /*EXL05 注意力缺陷過動症*/
CREATE TABLE TEMP.EXL05 AS 
SELECT DISTINCT A.ID
FROM NH.CASE_00 AS A
INNER JOIN NH.C04 AS B ON A.ID = B.ID AND A.FIRST_DATE >= B.FUNC_DATE
;

PROC SQL;  /*EXL06 本身神經學疾病干擾*/
CREATE TABLE TEMP.EXL06 AS 
SELECT DISTINCT A.ID
FROM NH.CASE_00 AS A
INNER JOIN NH.C05 AS B ON A.ID = B.ID AND A.FIRST_DATE >= B.FUNC_DATE
;
PROC SQL;  /*EXL07 後天中樞神經感染疾病影響腦部*/
CREATE TABLE TEMP.EXL07 AS 
SELECT DISTINCT A.ID
FROM NH.CASE_00 AS A
INNER JOIN NH.C06 AS B ON A.ID = B.ID AND A.FIRST_DATE >= B.FUNC_DATE
;
PROC SQL; /*額外加入表格並以0和1標籤方便計算人數*/
CREATE TABLE NH.CASE_01 AS 
SELECT DISTINCT A.*,
    CASE WHEN A.AGE <= 6 THEN 1 ELSE 0 END AS EXL_01,
    CASE WHEN SUBSTR(FIRST_DATE,1,4) IN ("2000","2001","2002","2003","2004","2005","2006") THEN 1 ELSE 0 END AS EXL_02,
    CASE WHEN B1.ID IS  NULL THEN 1 ELSE 0 END AS EXL_03,
    CASE WHEN B2.ID IS  NULL THEN 1 ELSE 0 END AS EXL_04,
    CASE WHEN B3.ID IS  NULL THEN 1 ELSE 0 END AS EXL_05,
    CASE WHEN B4.ID IS  NULL THEN 1 ELSE 0 END AS EXL_06,
	CASE WHEN B5.ID IS  NULL THEN 1 ELSE 0 END AS EXL_07
FROM NH.CASE_00 AS A
LEFT JOIN TEMP.EXL03 AS B1 ON A.ID = B1.ID
LEFT JOIN TEMP.EXL04 AS B2 ON A.ID = B2.ID
LEFT JOIN TEMP.EXL05 AS B3 ON A.ID = B3.ID
LEFT JOIN TEMP.EXL06 AS B4 ON A.ID = B4.ID
LEFT JOIN TEMP.EXL07 AS B5 ON A.ID = B5.ID
;
QUIT;

PROC SQL;  /*排除條件後的中耳炎人數*/
CREATE TABLE TEMP.CASE_02_AOM AS 
SELECT DISTINCT A.*
FROM NH.CASE_01 AS A
WHERE EXL_01 = 1 AND EXL_02 = 1 AND EXL_03 = 1 AND EXL_04 = 1 AND EXL_05 = 1 AND EXL_06 = 1 AND EXL_07
; 
QUIT;


PROC SORT DATA = TEMP.TEST_C01;by ID FUNC_DATE;RUN;
DATA TEMP.TEST_C01; /*外加一個欄位 方便排除*/
SET TEMP.TEST_C01;
FLAG = 0;
RUN;
QUIT;
PROC SQL; /*將排序後的日期進行計算 並替重複就診標上標籤*/
CREATE TABLE TEMP.RAOM_C01_FLAG AS
	SELECT DISTINCT 
		A.ID,
		A.FUNC_DATE, 
    CASE WHEN 15 > (DATDIF(INPUT(A.FUNC_DATE,YYMMDD8.),INPUT(B.FUNC_DATE,YYMMDD8.),'ACT/ACT')) > 0 THEN A.flag + 1 ELSE A.flag + 0 END AS FLAG2
	FROM TEMP.TEST_C01 AS A
	INNER JOIN NH.C01 AS B ON A.ID = B.ID
	WHERE A.FUNC_DATE ^= B.FUNC_DATE
	;
QUIT;
PROC SQL;  /*將重複就診取出*/
CREATE TABLE TEMP.C01_REPEAT_CASE AS 
SELECT DISTINCT
	A.id,
	FUNC_DATE
FROM TEMP.RAOM_C01_FLAG AS A
GROUP BY ID,FUNC_DATE
HAVING FLAG2 = 1;
QUIT;
PROC SQL; /*將重複就診排除*/
CREATE TABLE TEMP.C01_DISTINGUISH_CASE AS 
SELECT 
	A.*
FROM TEMP.TEST_C01 AS A
LEFT JOIN TEMP.C01_REPEAT_CASE AS B ON (A.FUNC_DATE = B.FUNC_DATE AND A.ID = B.ID)
WHERE B.FUNC_DATE IS NULL;
QUIT; 
PROC SORT DATA = TEMP.C01_DISTINGUISH_CASE;by ID FUNC_DATE;RUN;

PROC SQL; /*將6個月3次以內的取出 並訂出標籤FLAG3*/
CREATE TABLE TEMP.C01_SIX AS 
SELECT DISTINCT
	A.*,
	CASE WHEN (DATDIF(INPUT(A.FUNC_DATE,YYMMDD8.),INPUT(C.FUNC_DATE,YYMMDD8.),'ACT/ACT')) <= 183 THEN 1 ELSE 0 END AS FLAG3
FROM TEMP.C01_DISTINGUISH_CASE AS A
INNER JOIN TEMP.C01_DISTINGUISH_CASE AS B ON A.ID = B.ID
INNER JOIN TEMP.C01_DISTINGUISH_CASE AS C ON A.ID = C.ID
WHERE  A.FUNC_DATE < B.FUNC_DATE AND B.FUNC_DATE < C.FUNC_DATE;
QUIT;
PROC SQL; /*將12個月4次以內的取出 並訂出標籤FLAG4*/
CREATE TABLE TEMP.C01_TWELVE AS 
SELECT DISTINCT
	A.*,
	CASE WHEN (DATDIF(INPUT(A.FUNC_DATE,YYMMDD8.),INPUT(D.FUNC_DATE,YYMMDD8.),'ACT/ACT')) <= 10 THEN 1 ELSE 0 END AS FLAG4
FROM TEMP.C01_DISTINGUISH_CASE AS A
INNER JOIN TEMP.C01_DISTINGUISH_CASE AS B ON A.ID = B.ID
INNER JOIN TEMP.C01_DISTINGUISH_CASE AS C ON A.ID = C.ID
INNER JOIN TEMP.C01_DISTINGUISH_CASE AS D ON A.ID = D.ID
WHERE  A.FUNC_DATE < B.FUNC_DATE AND B.FUNC_DATE < C.FUNC_DATE AND C.FUNC_DATE < D.FUNC_DATE;
QUIT; 

PROC SQL; /*取出中耳炎復發id(人次) CASE02*/
CREATE TABLE TEMP.CASE_02 AS 
SELECT DISTINCT
	A.id,
	FUNC_DATE
FROM TEMP.C01_SIX AS A
GROUP BY ID,FUNC_DATE
HAVING FLAG3 = 1
UNION
SELECT DISTINCT
	A.id,
	FUNC_DATE
FROM TEMP.C01_TWELVE AS A
GROUP BY ID,FUNC_DATE
HAVING FLAG4 = 1;
QUIT;
PROC SQL; /*定出所有死亡日期(DET_DATE)*/
CREATE TABLE TEMP.DEA_ID AS 
SELECT DISTINCT A.ID,MAX(FUNC_DATE) AS DET_DATE
FROM NH.DEA AS A
GROUP BY A.ID
;
QUIT;
PROC SQL; /*得到沒因EXL01~06被排除掉的人    取至20131231*/ 
CREATE TABLE NH.CASE_02 AS 
SELECT DISTINCT A.*,
    CASE WHEN B.ID IS NULL THEN "20131231" ELSE  B.DET_DATE  END AS LAST_DATE
FROM NH.CASE_01 AS A
LEFT JOIN TEMP.DEA_ID AS B ON A.ID = B.ID
;
QUIT;
%MACRO joindata_baseline(dis); /*追溯case02的人是否在中耳炎前得到C07~C13疾病 並於BL_C07~C13標記0和1*/

PROC SQL; 
CREATE TABLE TEMP.&dis._ID AS 
SELECT DISTINCT A.ID
FROM NH.CASE_02 AS A
INNER JOIN NH.&dis. AS B ON A.ID = B.ID AND A.FIRST_DATE >= B.FUNC_DATE
;
QUIT;

PROC SQL; 
CREATE TABLE NH.CASE_02 AS 
SELECT DISTINCT A.*,
    CASE WHEN A.ID IN (SELECT ID FROM TEMP.&dis._ID) THEN 1 ELSE 0 END AS BL_&dis.
FROM NH.CASE_02 AS A
;
QUIT;

%MEND; 
%joindata_baseline(C07);
%joindata_baseline(C08);
%joindata_baseline(C09);
%joindata_baseline(C10);
%joindata_baseline(C11);
%joindata_baseline(C12);
%joindata_baseline(C13);
PROC SQL; /*取出得病C02~04的id作為OUTCOME計算*/
CREATE TABLE TEMP.O01 AS 
SELECT DISTINCT A.ID,B.FUNC_DATE
FROM NH.CASE_00 AS A
INNER JOIN NH.C02 AS B ON A.ID = B.ID
;
QUIT;


PROC SQL; 
CREATE TABLE TEMP.O02 AS 
SELECT DISTINCT A.ID,B.FUNC_DATE
FROM NH.CASE_00 AS A
INNER JOIN NH.C03 AS B ON A.ID = B.ID
;
QUIT;


PROC SQL; 
CREATE TABLE TEMP.O03 AS 
SELECT DISTINCT A.ID,B.FUNC_DATE
FROM NH.CASE_00 AS A
INNER JOIN NH.C04 AS B ON A.ID = B.ID
;
QUIT;
%MACRO joindata_outcome(dis);/*將O01~03與 CASE02比對 條件:比得C01較晚發生*/

PROC SQL; 
CREATE TABLE TEMP.&dis._ID AS 
SELECT DISTINCT A.ID,MIN(FUNC_DATE) AS FIRST_DATE
FROM NH.CASE_02 AS A
INNER JOIN TEMP.&dis. AS B ON A.ID = B.ID AND A.FIRST_DATE < B.FUNC_DATE
GROUP BY A.ID
;
QUIT;

PROC SQL; /*用比對結果計算出OT_DATE OT_YR*/
CREATE TABLE NH.CASE_02 AS 
SELECT DISTINCT A.*,
    CASE WHEN A.ID IN (SELECT ID FROM TEMP.&dis._ID) THEN 1 ELSE 0 END AS OT_&dis.,
    CASE WHEN B.ID IS NULL THEN A.LAST_DATE ELSE B.FIRST_DATE END AS OT_&dis._DATE,
    CASE WHEN B.ID IS NULL THEN YRDIF(INPUT(A.FIRST_DATE,YYMMDD8.),INPUT(A.LAST_DATE,YYMMDD8.),'ACT/ACT') ELSE YRDIF(INPUT(A.FIRST_DATE,YYMMDD8.),INPUT(B.FIRST_DATE,YYMMDD8.),'ACT/ACT') END AS OT_&dis._FUYR
FROM NH.CASE_02 AS A
LEFT JOIN TEMP.&dis._ID AS B ON A.ID = B.ID
;
QUIT;

%MEND; 

%joindata_outcome(O01);
%joindata_outcome(O02);
%joindata_outcome(O03);

PROC SQL; /*取出中耳炎復發id(人次)CONTROL02*/
CREATE TABLE TEMP.CTRL_02 AS 
SELECT DISTINCT
	A.ID
FROM NH.CASE_00 AS A
LEFT JOIN TEMP.CASE_02 AS B ON (A.ID = B.ID)
WHERE B.ID IS NULL;
QUIT;

PROC SQL;
CREATE TABLE NH.ID_00 AS 
SELECT DISTINCT
	A.*,
	"CASE" AS GP,
	1 AS GP1
	FROM NH.CASE_02 AS A 
	INNER JOIN TEMP.CASE_02 AS B ON (A.ID = B.ID) UNION
SELECT DISTINCT
	A.*,
	"CTRL" AS GP,
	0 AS GP1
	FROM NH.CASE_02 AS A 
	INNER JOIN TEMP.CTRL_02 AS B ON (A.ID = B.ID);
QUIT;
PROC EXPORT DATA = NH.ID_00 DBMS = xlsx
OUTFILE = "C:\輔仁大學臨時工\永和耕莘\EXCEL\TEST.xlsx"
REPLACE;
SHEET="ID_00";
RUN;
PROC LOGISTIC DATA = NH.ID_00;
CLASS ID_SEX(REF = 'F')/ PARAM = REF;
MODEL GP1 = ID_SEX AGE BL_C07 BL_C08 BL_C09 BL_C10 BL_C11 BL_C12 BL_C13 
/RISKLIMITS
LACKFIT RSQUARE;
OUTPUT OUT = TEMP.PROPENSITY PROB = PROB;
RUN;
%include'C:\輔仁大學臨時工\永和耕莘\OneToManyMTCH.txt';
%OneToManyMTCH(NH,ID_00,GP1,ID,MATCH,3)
PROC SQL; 
CREATE TABLE NUM AS 
SELECT 1 AS SEQ,COUNT(*) AS FRQ, COUNT(DISTINCT ID) AS PEO FROM NH.CASE_01 AS A UNION
SELECT 2 AS SEQ,COUNT(*) AS FRQ, COUNT(DISTINCT ID) AS PEO FROM NH.CASE_01 AS A WHERE EXL_01 = 0 UNION
SELECT 3 AS SEQ,COUNT(*) AS FRQ, COUNT(DISTINCT ID) AS PEO FROM NH.CASE_01 AS A WHERE EXL_02 = 0 UNION
SELECT 4 AS SEQ,COUNT(*) AS FRQ, COUNT(DISTINCT ID) AS PEO FROM NH.CASE_01 AS A WHERE EXL_03 = 0 UNION
SELECT 5 AS SEQ,COUNT(*) AS FRQ, COUNT(DISTINCT ID) AS PEO FROM NH.CASE_01 AS A WHERE EXL_04 = 0 UNION
SELECT 6 AS SEQ,COUNT(*) AS FRQ, COUNT(DISTINCT ID) AS PEO FROM NH.CASE_01 AS A WHERE EXL_05 = 0 UNION
SELECT 7 AS SEQ,COUNT(*) AS FRQ, COUNT(DISTINCT ID) AS PEO FROM NH.CASE_01 AS A WHERE EXL_06 = 0 UNION
SELECT 8 AS SEQ,COUNT(*) AS FRQ, COUNT(DISTINCT ID) AS PEO FROM NH.CASE_01 AS A WHERE EXL_07 = 0 UNION
SELECT 9 AS SEQ,COUNT(*) AS FRQ, COUNT(DISTINCT ID) AS PEO FROM TEMP.CASE_02_AOM AS A UNION
SELECT 10 AS SEQ,COUNT(*) AS FRQ, COUNT(DISTINCT ID) AS PEO FROM TEMP.CASE_02 AS A UNION
SELECT 11 AS SEQ,COUNT(*) AS FRQ, COUNT(DISTINCT ID) AS PEO FROM TEMP.CTRL_02 AS A 
;
QUIT;
